using System;
using System.ComponentModel.DataAnnotations.Schema;
using WCA.Domain.Actionstep;
using WCA.Domain.Models.Account;

namespace WCA.Domain.InfoTrack
{
    public enum ActionstepDisbursementStatus
    {
        NotYetCreated,
        NotApplicable,
        CreatedSuccessfully,
        CreationInProgress,
        CreationFailed
    }

    public enum ActionstepDocumentUploadStatus
    {
        NotYetUploaded,
        NotApplicable,
        UploadedSuccessfully,
        UploadInProgress,
        UploadFailed
    }

    /// <summary>
    /// Represents the most current status of an InfoTrack Order.
    /// </summary>
    public class InfoTrackOrder
    {
        public ActionstepOrg ActionstepOrg { get; set; }
        public int ActionstepMatterId { get; set; }
        public WCAUser OrderedByWCAUser { get; set; }
        public DateTime DateCreatedUtc { get; set; }
        public WCAUser CreatedBy { get; set; }
        public DateTime LastUpdatedUtc { get; set; }
        public WCAUser UpdatedBy { get; set; }
        public ActionstepDisbursementStatus ActionstepDisbursementStatus { get; set; } = ActionstepDisbursementStatus.NotYetCreated;
        public DateTime ActionstepDisbursementStatusUpdatedUtc { get; set; }
        public ActionstepDocumentUploadStatus ActionstepDocumentUploadStatus { get; set; } = ActionstepDocumentUploadStatus.NotYetUploaded;
        public DateTime ActionstepDocumentUploadStatusUpdatedUtc { get; set; }

        #region Properties returned by InfoTrack
        public bool InfoTrackAvailableOnline { get; set; }
        public string InfoTrackBillingTypeName { get; set; }
        public string InfoTrackClientReference { get; set; }
        public DateTime InfoTrackDateOrderedUtc { get; set; }
        public DateTime? InfoTrackDateCompletedUtc { get; set; }
        public string InfoTrackDescription { get; set; }
        public int InfoTrackOrderId { get; set; }
        public int InfoTrackParentOrderId { get; set; }
        public string InfoTrackOrderedBy { get; set; }
        public string InfoTrackReference { get; set; }
        public string InfoTrackRetailerReference { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackRetailerFee { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackRetailerFeeGST { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackRetailerFeeTotal { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackSupplierFee { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackSupplierFeeGST { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackSupplierFeeTotal { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackTotalFee { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackTotalFeeGST { get; set; }

        [Column(TypeName = "decimal(18, 2)")]
        public decimal InfoTrackTotalFeeTotal { get; set; }

        public string InfoTrackServiceName { get; set; }
        public string InfoTrackStatus { get; set; }
        public string InfoTrackStatusMessage { get; set; }

#pragma warning disable CA1056 // Uri properties should not be strings
        public string InfoTrackDownloadUrl { get; set; }
        public string InfoTrackOnlineUrl { get; set; }
#pragma warning restore CA1056 // Uri properties should not be strings

        public bool InfoTrackIsBillable { get; set; }

        /// <summary>
        /// This is a hash generated by InfoTrack based on the timestamp that the file was
        /// last modified. It can be used to check whether downloading the file is necessary.
        /// E.g. If the hash provided differs from the one stored, then the file has changed
        /// and should be downloaded again.
        /// 
        /// This is not a hash of the file contents. So it is only possible to perform comparisons
        /// between FileHash values supplied by InfoTrack.
        /// </summary>
        public string InfoTrackFileHash { get; set; }
        public string InfoTrackEmail { get; set; }
        #endregion

        /// <summary>
        /// Whether this order has been reconciled or not. This is modified by the client.
        /// </summary>
        public bool Reconciled { get; set; }
    }
}
